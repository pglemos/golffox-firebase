// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/motorista" | "/operador" | "/painel" | "/passageiro"
type AppRouteHandlerRoutes = "/api/alerts" | "/api/auth/login" | "/api/auth/profile" | "/api/auth/register" | "/api/companies" | "/api/companies/[id]" | "/api/companies/[id]/toggle-status" | "/api/drivers" | "/api/drivers/[id]" | "/api/health" | "/api/passengers" | "/api/passengers/[id]" | "/api/routes" | "/api/routes/[id]" | "/api/routes/[id]/finish" | "/api/routes/[id]/start" | "/api/stats" | "/api/vehicles" | "/api/vehicles/[id]"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/api/alerts": {}
  "/api/auth/login": {}
  "/api/auth/profile": {}
  "/api/auth/register": {}
  "/api/companies": {}
  "/api/companies/[id]": { "id": string; }
  "/api/companies/[id]/toggle-status": { "id": string; }
  "/api/drivers": {}
  "/api/drivers/[id]": { "id": string; }
  "/api/health": {}
  "/api/passengers": {}
  "/api/passengers/[id]": { "id": string; }
  "/api/routes": {}
  "/api/routes/[id]": { "id": string; }
  "/api/routes/[id]/finish": { "id": string; }
  "/api/routes/[id]/start": { "id": string; }
  "/api/stats": {}
  "/api/vehicles": {}
  "/api/vehicles/[id]": { "id": string; }
  "/motorista": {}
  "/operador": {}
  "/painel": {}
  "/passageiro": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
